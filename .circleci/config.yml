version: 2.1

executors:
  python:
    docker:
      - image: cimg/python:3.12
  sonar-scanner:
    docker:
      - image: cimg/openjdk:21.0

jobs:

  lint:
    executor: python
    steps:
      - checkout
      - run: |
          pip install --user hatch
          hatch run lint

  code-climate:
    executor: python
    steps:
      - run: |
          mkdir -p code-climate/
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./code-climate/test-reporter
          chmod +x ./code-climate/test-reporter
      - persist_to_workspace:
          root: code-climate
          paths:
            - test-reporter

  test:
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>
    steps:
      - checkout
      - attach_workspace:
          at: code-climate
      - run: |
          ./code-climate/test-reporter before-build
          pip install --user hatch
          hatch env run -i python=<< parameters.python-version >> -e ci test
          code-climate/test-reporter format-coverage -t coverage.py -o coverage/codeclimate.<< parameters.python-version >>.json
      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.<< parameters.python-version >>.json
            - data-<< parameters.python-version >>
      - store_test_results:
          path: test-results

  combine-output:
    executor: python
    steps:
      - checkout
      - attach_workspace:
          at: code-climate
      - attach_workspace:
          at: coverage
      - run: |
          pip install --user hatch
          ./code-climate/test-reporter sum-coverage coverage/codeclimate.*.json
          hatch run build-report
      - persist_to_workspace:
          root: coverage
          paths:
            - data
            - codeclimate.json
            - coverage.xml
      - store_test_results:
          path: coverage/coverage.xml

  upload-coverage:
    executor: python
    steps:
      - attach_workspace:
          at: code-climate
      - attach_workspace:
          at: coverage
      - run: |
          ./code-climate/test-reporter upload-coverage

  update-sonarcloud:
    executor: sonar-scanner
    steps:
      - checkout
      - attach_workspace:
          at: coverage
      - run: |
          cp coverage/coverage.xml .
      - sonarcloud/scan

  distribute-tag:
    executor: python
    steps:
      - checkout
      - run: |
          pip install --user hatch twine
          hatch build
          twine check dist/*
          twine upload --skip-existing dist/*
          curl -XPOST -d "token=$READTHEDOCS_TOKEN" https://readthedocs.org/api/v2/webhook/ietfparse/28564/

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0

workflows:
  build-workflow:
    jobs:
      - lint
      - code-climate
      - test:
          requires:
            - lint
            - code-climate
          matrix:
            parameters:
              python-version: ["3.9", "3.10", "3.11", "3.12"]
      - combine-output:
          requires:
            - test
      - upload-coverage:
          requires:
            - combine-output
      - update-sonarcloud:
          context: org-global
          requires:
            - combine-output
      - distribute-tag:
          requires:
            - test
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
